
from tfinterface.model_base import ModelBase
from tfinterface.supervised import SupervisedModel
from pytest import raises


class TestBase(object):

    def test_base(self):
        class SomeModel(ModelBase):
            def define_model(self, y, z = 1):
                self.y = y
                self.z = z

            def get_trainer(self) = None

        assert SomeModel(42).y == 42
        assert SomeModel(42).z == 1
        assert SomeModel(42, 2).z == 2

    def test_raises_on_not_implemented(self):
        class SomeModel(ModelBase):
            pass

        class SomeSupervisedModel(SupervisedModel):
            pass

        with raises(TypeError):
            SomeModel()
            SomeSupervisedModel()


    def test_supervised_model_implementation(self):

        class SomeSupervisedModel(SupervisedModel):

            def define_model(*args, **kwargs):
                self.x = 1
                self.y = 2
                self.loss = 3

            def predict_feed(): pass

        assert SomeSupervisedModel()

