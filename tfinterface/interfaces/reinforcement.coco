from abc import ABCMeta, abstractmethod
from tfinterface.utils import TENSOR

from .model_base import BaseInterface


class ReinforcementInterface(BaseInterface):
    """docstring for ReinforcementInterface."""

    s = TENSOR
    a = TENSOR
    r = TENSOR
    s1 = TENSOR
    h = TENSOR

    #COMMON METHODS
    @abstractmethod
    def predict(self, *args, **kwargs): pass

    @abstractmethod
    def fit_feed(self, *args, **kwargs): pass

    @abstractmethod
    def predict_feed(self, *args, **kwargs): pass

    @abstractmethod
    def fit(self, *args, **kwargs): pass

    # REINFORCEMENT METHODS
    @abstractmethod
    def choose_action(self, *args, **kwargs): pass
    
    @abstractmethod
    def reset(self, *args, **kwargs): pass

