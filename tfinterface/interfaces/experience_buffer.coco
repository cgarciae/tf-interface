from abc import ABCMeta, abstractmethod
import random

class ExperienceBufferInterface(object):
    """docstring for ExperienceBufferInterface."""

    __metaclass__ = ABCMeta

    @abstractmethod
    def reset(self): pass

    @abstractmethod
    def append(self, experience): pass

    @abstractmethod
    def random_batch(self, batch_size): pass

    @abstractmethod
    def unzip(self): pass

    @abstractmethod
    def __iter__(self): pass

    @abstractmethod
    def __len__(self): pass

    @abstractmethod
    def __getitem__(self): pass

    def get_random_idx(self, batch_size):
        n = len(self)
        batch_size = min(batch_size, n)
        idx = range(n)
        return random.sample(idx, batch_size)

